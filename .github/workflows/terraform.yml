


name: Terraform Workflow

on:
  workflow_dispatch:
    inputs:
      choice:
        type: choice
        description: Select the environment
        options:
        - dev
        - test
        - prod

jobs:
  terraform-create-and-destroy:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: print environment
        run: | 
          echo "env choice is ${{ github.event.inputs.choice }}"
      
      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Terraform init
        working-directory: ./infra
        run: terraform init -backend-config=backend-${{ github.event.inputs.choice }}.config

      - name: Terraform workspace list
        working-directory: ./infra
        run: terraform workspace list

      - name: Terraform workspace new environment and select
        working-directory: ./infra
        run: |
          terraform workspace select ${{ github.event.inputs.choice }} || terraform workspace new ${{ github.event.inputs.choice }}
          terraform workspace list

      - name: Terraform plan
        working-directory: ./infra
        run: terraform plan -var-file=${{ github.event.inputs.choice }}.tfvars

      - name: Terraform apply
        working-directory: ./infra
        run: terraform apply -var-file=${{ github.event.inputs.choice }}.tfvars -auto-approve



        
      - name: Setup kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: 'latest'

      - name: Update kubeconfig for EKS (dev cluster)
        run: aws eks update-kubeconfig --name ${{ github.event.inputs.choice }}-eks-cluster --region us-east-1

      - name: Create dev namespace if not exists
        run: |
          kubectl get namespace dev || kubectl create namespace dev

      - name: Deploy product-service to EKS (with GitHub SHA image tag)
        env:
          GITHUB_SHA: ${{ github.sha }}
        run: |
          export IMAGE_TAG="${{ github.event.inputs.choice }}-${{ github.sha }}"
          envsubst < ./product-service/k8s/${{ github.event.inputs.choice }}/deployment.yaml | kubectl apply -f -
          envsubst < ./product-service/k8s/${{ github.event.inputs.choice }}/service.yaml | kubectl apply -f -
          
      - name: Update Deployment Image
        run: |
          kubectl set image deployment/product-service \
            product-service=255945442255.dkr.ecr.us-east-1.amazonaws.com/product-service:${{ github.event.inputs.choice }}-${{ github.sha }} \
            -n ${{ github.event.inputs.choice }}



    #   - name: Pause 3min to verify creation
    #     run: sleep 180

    #   - name: Terraform destroy
    #     working-directory: ./infra
    #     run: terraform destroy -var-file=${{ github.event.inputs.choice }}.tfvars -auto-approve