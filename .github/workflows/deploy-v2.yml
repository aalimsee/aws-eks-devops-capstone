
# Explanation:
# Pull Request:
# Runs Terraform init + plan only â€” NO deploy.
# No risk of accidental production changes.

# Push:
# Runs the full deploy:
# Terraform apply
# Kubernetes kubectl apply for deployment.yaml and service.yaml.

name: Deploy to EKS (deploy-v2)

on:
  push:
    branches: [ main, test, dev ]
  pull_request:
    branches: [ main, test, dev ]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Terraform Init & Plan
        working-directory: ./infra
        run: |
          terraform init -backend-config=backend-${{ github.event.inputs.choice || 'dev' }}.config
          terraform plan -var-file=${{ github.event.inputs.choice || 'dev' }}.tfvars

      - name: Setup kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: 'latest'

      - name: Update kubeconfig for EKS
        run: |
          aws eks update-kubeconfig --name dev-eks-cluster --region us-east-1

      - name: Apply Kubernetes Deployment (only on push)
        if: github.event_name == 'push'
        run: |
          export IMAGE_TAG="dev-${{ github.sha }}"
          envsubst < ./product-service/k8s/dev/deployment.yaml | kubectl apply -f -

      - name: Apply Kubernetes Service (only on push)
        if: github.event_name == 'push'
        run: |
          kubectl apply -f ./product-service/k8s/dev/service.yaml

      - name: Terraform Apply (only on push)
        if: github.event_name == 'push'
        working-directory: ./infra
        run: terraform apply -var-file=${{ github.event.inputs.choice || 'dev' }}.tfvars -auto-approve
